/**
 * Utilitaire de nettoyage du cache localStorage
 * √Ä utiliser apr√®s mise √† jour des donn√©es de d√©monstration
 */

export function clearAllCache(): void {
  console.log('üßπ Nettoyage du cache localStorage...');
  
  const keysToRemove = [
    'sogara_employees',
    'sogara_visitors',
    'sogara_visits',
    'sogara_packages',
    'sogara_equipment',
    'sogara_hse_incidents',
    'sogara_hse_trainings',
    'sogara_posts',
    'sogara_notifications',
    'userId',
    'matricule'
  ];

  keysToRemove.forEach(key => {
    localStorage.removeItem(key);
    console.log(`  ‚úÖ Supprim√©: ${key}`);
  });

  console.log('‚úÖ Cache nettoy√© ! Rechargement de la page...');
  window.location.reload();
}

export function clearUserCache(): void {
  console.log('üßπ Nettoyage du cache utilisateur...');
  
  localStorage.removeItem('userId');
  localStorage.removeItem('matricule');
  
  console.log('‚úÖ Cache utilisateur nettoy√© !');
}

export function forceClearEmployeeCache(): void {
  console.log('üßπ Nettoyage forc√© du cache employ√©s...');
  
  localStorage.removeItem('sogara_employees');
  
  console.log('‚úÖ Cache employ√©s supprim√© ! Rechargement...');
  window.location.reload();
}

// Fonction appelable depuis la console pour d√©bugger
if (typeof window !== 'undefined') {
  (window as any).clearSogaraCache = clearAllCache;
  (window as any).clearUserCache = clearUserCache;
  (window as any).forceClearEmployees = forceClearEmployeeCache;
  
  console.log('üîß Commandes disponibles dans la console:');
  console.log('  clearSogaraCache() - Nettoie tout le cache');
  console.log('  clearUserCache() - Nettoie seulement l\'utilisateur');
  console.log('  forceClearEmployees() - Force le rechargement des employ√©s');
}

